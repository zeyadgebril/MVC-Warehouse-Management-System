@model IEnumerable<Warehouse_Management_System.ViewModels.ProductViewModel>

@{
    ViewData["Title"] = "Product Management";
}

<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --success-gradient: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        --warning-gradient: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
        --danger-gradient: linear-gradient(135deg, #dc3545 0%, #e74c3c 100%);
        --dark-bg: #0f0f0f;
        --card-bg: #1a1a1a;
        --accent-bg: #2a2a2a;
        --text-primary: black;
        --text-secondary: #e9ecef;
        --text-muted: #adb5bd;
        --text-accent: #74b9ff;
        --border-color: #495057;
        --shadow-color: rgba(102, 126, 234, 0.15);
        --success-text: #ffffff;
        --warning-text: #000000;
        --danger-text: #ffffff;
        --info-text: #ffffff;
    }

    body {
        background: var(--dark-bg);
        color: var(--text-primary);
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    }

    .hero-section {
        background: var(--primary-gradient);
        padding: 3rem 0;
        margin: -2rem -15px 2rem -15px;
        border-radius: 0 0 2rem 2rem;
        position: relative;
        overflow: hidden;
    }

        .hero-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="50" cy="50" r="1" fill="white" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
            opacity: 0.1;
        }

    .hero-content {
        position: relative;
        z-index: 2;
    }

    .hero-title {
        font-size: 3rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: #ffffff;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }

    .hero-subtitle {
        font-size: 1.2rem;
        color: #ffffff;
        opacity: 0.95;
        margin-bottom: 0;
        text-shadow: 0 1px 2px rgba(0,0,0,0.2);
    }

    .stats-card {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 1rem;
        padding: 1.5rem;
        margin-bottom: 2rem;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        opacity: 1;
        transform: translateY(0);
    }

        .stats-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--primary-gradient);
        }

        .stats-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px var(--shadow-color);
            border-color: var(--text-accent);
        }

    .stat-icon {
        width: 3rem;
        height: 3rem;
        border-radius: 0.75rem;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.2rem;
        margin-bottom: 1rem;
        color: #ffffff !important;
        font-weight: bold;
    }

    .stats-card .text-muted {
        color: var(--text-muted) !important;
        font-weight: 500;
        font-size: 0.9rem;
    }

    .stats-card .h4 {
        color: var(--text-primary) !important;
        font-weight: 700;
        font-size: 1.8rem;
    }

    .main-card {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 1.5rem;
        box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
        overflow: hidden;
        position: relative;
        opacity: 1;
        transform: translateY(0);
    }

        .main-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 1px;
            background: var(--primary-gradient);
        }

    .card-header-custom {
        background: var(--accent-bg);
        border-bottom: 1px solid var(--border-color);
        padding: 1.5rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .search-container {
        position: relative;
        max-width: 400px;
    }

    .search-input {
        background: var(--dark-bg);
        border: 2px solid var(--border-color);
        border-radius: 50px;
        padding: 0.75rem 1rem 0.75rem 3rem;
        color: var(--text-primary);
        transition: all 0.3s ease;
        width: 100%;
        font-weight: 500;
    }

        .search-input::placeholder {
            color: var(--text-muted);
            opacity: 0.8;
        }

        .search-input:focus {
            border-color: var(--text-accent);
            box-shadow: 0 0 0 3px rgba(116, 185, 255, 0.2);
            background: var(--accent-bg);
            outline: none;
            color: var(--text-primary);
        }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-accent);
        transition: color 0.3s ease;
        pointer-events: none;
        font-size: 1.1rem;
    }

    .action-toolbar {
        display: flex;
        gap: 1rem;
        align-items: center;
        flex-wrap: wrap;
    }

    .btn-modern {
        border-radius: 50px;
        padding: 0.75rem 1.5rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        transition: all 0.3s ease;
        border: 2px solid transparent;
        position: relative;
        overflow: hidden;
    }

        .btn-modern::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn-modern:hover::before {
            left: 100%;
        }

    .btn-primary-modern {
        background: var(--primary-gradient);
        color: #ffffff;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        border-color: transparent;
    }

        .btn-primary-modern:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.5);
            color: #ffffff;
        }

    .btn-outline-secondary {
        border-color: var(--border-color);
        color: var(--text-secondary);
        background: var(--accent-bg);
    }

        .btn-outline-secondary:hover {
            background: var(--border-color);
            border-color: var(--text-accent);
            color: var(--text-primary);
        }

    .table-modern {
        background: transparent;
        margin: 0;
    }

        .table-modern th {
            background: var(--accent-bg);
            border: none;
            color: var(--text-secondary);
            font-weight: 700;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.9rem;
            padding: 1.25rem 1rem;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        .table-modern td {
            border: none;
            border-bottom: 1px solid var(--border-color);
            padding: 1.5rem 1rem;
            vertical-align: middle;
            color: var(--text-primary);
        }

        .table-modern tbody tr {
            transition: all 0.3s ease;
            position: relative;
            opacity: 1;
            transform: translateY(0);
        }

            .table-modern tbody tr:hover {
                background: var(--accent-bg);
                transform: scale(1.01);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            }

    .product-name {
        font-weight: 700;
        font-size: 1.1rem;
        color: var(--text-primary);
        margin-bottom: 0.25rem;
    }

    .product-description {
        color: var(--text-muted);
        font-size: 0.9rem;
        opacity: 0.9;
        font-weight: 400;
    }

    .badge-modern {
        padding: 0.5rem 1rem;
        border-radius: 50px;
        font-weight: 700;
        font-size: 0.85rem;
        letter-spacing: 0.3px;
        position: relative;
        overflow: hidden;
        text-shadow: 0 1px 2px rgba(0,0,0,0.2);
    }

    .badge-success-modern {
        background: var(--success-gradient);
        color: var(--success-text);
        border: 1px solid rgba(40, 167, 69, 0.3);
    }

    .badge-danger-modern {
        background: var(--danger-gradient);
        color: var(--danger-text);
        border: 1px solid rgba(220, 53, 69, 0.3);
    }

    .badge-warning-modern {
        background: var(--warning-gradient);
        color: var(--warning-text);
        border: 1px solid rgba(255, 193, 7, 0.3);
        font-weight: 800;
    }

    .badge-secondary-modern {
        background: linear-gradient(135deg, #6c757d, #495057);
        color: #ffffff;
        border: 1px solid rgba(108, 117, 125, 0.3);
    }

    .btn-group-modern {
        display: flex;
        gap: 0.5rem;
    }

    .btn-action {
        width: 2.5rem;
        height: 2.5rem;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px solid var(--border-color);
        background: var(--accent-bg);
        color: var(--text-secondary);
        transition: all 0.3s ease;
        text-decoration: none;
        font-size: 0.9rem;
    }

        .btn-action:hover {
            transform: translateY(-2px) scale(1.1);
            color: #ffffff;
            text-decoration: none;
        }

    .btn-info-action:hover {
        background: var(--primary-gradient);
        border-color: var(--text-accent);
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        color: #ffffff;
    }

    .btn-warning-action:hover {
        background: var(--warning-gradient);
        border-color: #ffc107;
        box-shadow: 0 5px 15px rgba(255, 193, 7, 0.4);
        color: #000000;
    }

    .btn-danger-action:hover {
        background: var(--danger-gradient);
        border-color: #dc3545;
        box-shadow: 0 5px 15px rgba(220, 53, 69, 0.4);
        color: #ffffff;
    }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: var(--text-secondary);
    }

    .empty-state-icon {
        font-size: 4rem;
        margin-bottom: 1.5rem;
        color: var(--text-accent);
        opacity: 0.7;
    }

    .empty-state h4 {
        margin-bottom: 1rem;
        color: var(--text-primary);
        font-weight: 600;
    }

    .alert-modern {
        border: none;
        border-radius: 1rem;
        padding: 1rem 1.5rem;
        margin-bottom: 2rem;
        position: relative;
        overflow: hidden;
        opacity: 1;
        transform: translateY(0);
    }

    .alert-success-modern {
        background: linear-gradient(135deg, rgba(40, 167, 69, 0.15), rgba(32, 201, 151, 0.15));
        color: #ffffff;
        border: 1px solid rgba(40, 167, 69, 0.4);
        font-weight: 500;
    }

        .alert-success-modern i {
            color: #28a745;
        }

    /* Remove problematic animation classes */
    .animate-fade-in {
        opacity: 1;
        transform: translateY(0);
    }

    .loading-spinner {
        display: inline-block;
        width: 1rem;
        height: 1rem;
        border: 2px solid transparent;
        border-top: 2px solid currentColor;
        border-radius: 50%;
    }

    .text-success {
        color: #28a745 !important;
        font-weight: 600;
    }

    .text-muted {
        color: var(--text-muted) !important;
    }

    .fw-bold {
        color: var(--text-primary) !important;
        font-weight: 700 !important;
    }

    .small {
        color: var(--text-muted) !important;
        font-weight: 500;
    }

    .dropdown-menu-dark {
        background-color: var(--accent-bg);
        border: 1px solid var(--border-color);
    }

        .dropdown-menu-dark .dropdown-item {
            color: var(--text-secondary);
            font-weight: 500;
        }

            .dropdown-menu-dark .dropdown-item:hover {
                background-color: var(--border-color);
                color: var(--text-primary);
            }

    /* Responsive design */
    @@media (max-width: 768px) {
        .hero-title

    {
        font-size: 2rem;
    }

    .action-toolbar {
        flex-direction: column;
        align-items: stretch;
    }

    .search-container {
        max-width: 100%;
    }

    .btn-group-modern {
        justify-content: center;
    }

    .table-modern th,
    .table-modern td {
        padding: 1rem 0.5rem;
    }

    }
</style>

<!-- Hero Section -->
<div class="hero-section">
    <div class="container">
        <div class="hero-content text-center">
            <h1 class="hero-title">Product Management</h1>
            <p class="hero-subtitle">Manage your inventory with precision and efficiency</p>
        </div>
    </div>
</div>

<div class="container-fluid px-4">
    <!-- Stats Overview -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="stats-card">
                <div class="d-flex align-items-center">
                    <div class="stat-icon bg-primary text-white me-3">
                        <i class="fas fa-boxes"></i>
                    </div>
                    <div>
                        <div class="text-muted small">Total Products</div>
                        <div class="h4 mb-0">@(Model?.Count() ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="stats-card">
                <div class="d-flex align-items-center">
                    <div class="stat-icon bg-success text-white me-3">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div>
                        <div class="text-muted small">Active Products</div>
                        <div class="h4 mb-0">@(Model?.Count(p => p.IsActive == true) ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="stats-card">
                <div class="d-flex align-items-center">
                    <div class="stat-icon bg-warning text-white me-3">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div>
                        <div class="text-muted small">Low Stock</div>
                        <div class="h4 mb-0">@(Model?.Count(p => p.AvailableStock <= p.MinAvailableStock) ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6 mb-3">
            <div class="stats-card">
                <div class="d-flex align-items-center">
                    <div class="stat-icon bg-info text-white me-3">
                        <i class="fas fa-dollar-sign"></i>
                    </div>
                    <div>
                        <div class="text-muted small">Total Value</div>
                        <div class="h4 mb-0">@((Model?.Sum(p => (p.UnitPrice ?? 0) * (p.AvailableStock ?? 0)) ?? 0).ToString("C"))</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Success Alert -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success-modern alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Main Content Card -->
    <div class="main-card">
        <!-- Card Header -->
        <div class="card-header-custom">
            <div class="row w-100 align-items-center">
                <div class="col-md-6">
                    <div class="search-container">
                        <input type="text" class="search-input" id="productSearch" placeholder="Search products...">
                        <i class="fas fa-search search-icon"></i>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="action-toolbar justify-content-end">
                        <div class="dropdown">
                            <button class="btn btn-outline-secondary btn-modern dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                <i class="fas fa-filter me-2"></i>Filter
                            </button>
                            <ul class="dropdown-menu dropdown-menu-dark">
                                <li><a class="dropdown-item" href="#" data-filter="all">All Products</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="active">Active Only</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="inactive">Inactive Only</a></li>
                                <li><a class="dropdown-item" href="#" data-filter="low-stock">Low Stock</a></li>
                            </ul>
                        </div>
                        <a asp-action="Create" class="btn btn-primary-modern btn-modern">
                            <i class="fas fa-plus me-2"></i>Add Product
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Table Content -->
        <div class="table-responsive">
            <table class="table table-modern" id="productsTable">
                <thead>
                    <tr>
                        @if (Model != null && Model.Any())
                        {
                            <th><label asp-for="@Model.FirstOrDefault().Name"></label></th>
                            <th><label asp-for="@Model.FirstOrDefault().AvailableStock"></label></th>
                            <th><label asp-for="@Model.FirstOrDefault().CurrentQuantity"></label></th>
                            <th><label asp-for="@Model.FirstOrDefault().UnitPrice"></label></th>
                            <th><label asp-for="@Model.FirstOrDefault().IsActive"></label></th>
                            <th><label asp-for="@Model.FirstOrDefault().LastUpdated"></label></th>
                            <th class="text-center">Actions</th>
                        }
                        else
                        {
                            <th>Product Name</th>
                            <th>Available Stock</th>
                            <th>Current Quantity</th>
                            <th>Unit Price</th>
                            <th>Status</th>
                            <th>Last Updated</th>
                            <th class="text-center">Actions</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        @foreach (var item in Model)
                        {
                            <tr class="product-row" data-product-name="@(item.Name?.ToLower() ?? "")"
                                data-status="@(item.IsActive == true ? "active" : "inactive")"
                                data-stock-level="@((item.AvailableStock ?? 0) <= (item.MinAvailableStock ?? 0) ? "low" : "normal")">
                                <td>
                                    <div class="product-name">@(item.Name ?? "N/A")</div>
                                    @if (!string.IsNullOrEmpty(item.Description))
                                    {
                                        <div class="product-description">
                                            @(item.Description.Length > 50 ? item.Description.Substring(0, 50) + "..." : item.Description)
                                        </div>
                                    }
                                </td>
                                <td>
                                    <span class="badge-modern @((item.AvailableStock ?? 0) <= (item.MinAvailableStock ?? 0) ? "badge-danger-modern" : "badge-success-modern")">
                                        <i class="fas fa-boxes me-1"></i>
                                        @(item.AvailableStock ?? 0)
                                    </span>
                                </td>
                                <td>
                                    <span class="fw-bold">@(item.CurrentQuantity ?? 0)</span>
                                </td>
                                <td>
                                    <span class="fw-bold text-success">@(item.UnitPrice?.ToString("C") ?? "N/A")</span>
                                </td>
                                <td>
                                    @if (item.IsActive == true)
                                    {
                                        <span class="badge-modern badge-success-modern">
                                            <i class="fas fa-check-circle me-1"></i>Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge-modern badge-secondary-modern">
                                            <i class="fas fa-pause-circle me-1"></i>Inactive
                                        </span>
                                    }
                                </td>
                                <td>
                                    <span class="text-muted">@(item.LastUpdated?.ToString("MMM dd, yyyy") ?? "N/A")</span>
                                    @if (item.LastUpdated.HasValue)
                                    {
                                        <div class="small text-muted">@item.LastUpdated.Value.ToString("HH:mm")</div>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group-modern">
                                        <a asp-action="Details" asp-route-id="@item.ProductId"
                                           class="btn-action btn-info-action"
                                           title="View Details"
                                           data-bs-toggle="tooltip">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@item.ProductId"
                                           class="btn-action btn-warning-action"
                                           title="Edit Product"
                                           data-bs-toggle="tooltip">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.ProductId"
                                           class="btn-action btn-danger-action"
                                           title="Delete Product"
                                           data-bs-toggle="tooltip">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7">
                                <div class="empty-state">
                                    <div class="empty-state-icon">
                                        <i class="fas fa-box-open"></i>
                                    </div>
                                    <h4>No products found</h4>
                                    <p class="mb-4">Get started by adding your first product to the inventory.</p>
                                    <a asp-action="Create" class="btn btn-primary-modern btn-modern">
                                        <i class="fas fa-plus me-2"></i>Add Your First Product
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Page loaded, initializing components...');

            // Initialize tooltips
            try {
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
                var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl);
                });
                console.log('Tooltips initialized');
            } catch (error) {
                console.error('Error initializing tooltips:', error);
            }

            // Search functionality
            const searchInput = document.getElementById('productSearch');
            const tableRows = document.querySelectorAll('.product-row');
            console.log('Found table rows:', tableRows.length);

            if (searchInput) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();
                    let visibleCount = 0;

                    tableRows.forEach(row => {
                        const productName = row.dataset.productName || '';
                        const isVisible = productName.includes(searchTerm);

                        row.style.display = isVisible ? '' : 'none';
                        if (isVisible) visibleCount++;
                    });

                    updateVisibleCount(visibleCount);
                });
                console.log('Search functionality initialized');
            }

            // Filter functionality
            const filterButtons = document.querySelectorAll('[data-filter]');
            console.log('Found filter buttons:', filterButtons.length);

            filterButtons.forEach(button => {
                button.addEventListener('click', function(e) {
                    e.preventDefault();
                    const filter = this.dataset.filter;
                    console.log('Filter clicked:', filter);

                    tableRows.forEach(row => {
                        let shouldShow = true;

                        switch(filter) {
                            case 'active':
                                shouldShow = row.dataset.status === 'active';
                                break;
                            case 'inactive':
                                shouldShow = row.dataset.status === 'inactive';
                                break;
                            case 'low-stock':
                                shouldShow = row.dataset.stockLevel === 'low';
                                break;
                            default:
                                shouldShow = true;
                        }

                        row.style.display = shouldShow ? '' : 'none';
                    });
                });
            });

            function updateVisibleCount(count) {
                console.log(`Showing ${count} products`);
            }

            console.log('Page initialization complete');
        });
    </script>
}
