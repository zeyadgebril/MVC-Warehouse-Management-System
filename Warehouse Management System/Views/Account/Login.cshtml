@model LoginDataVM
@{
    ViewData["Title"] = "Login";
    Layout = "_LoginLayout";
}
@section CSS{
        * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Arial', sans-serif;
        background: #000;
        height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        overflow: hidden;
        position: relative;
    }

    /* Animated Background */
    .bg-animation {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 1;
    }

    .floating-shapes {
        position: absolute;
        width: 100%;
        height: 100%;
    }

    .shape {
        position: absolute;
        background: linear-gradient(45deg, #1e3a8a, #3b82f6, #60a5fa);
        border-radius: 50%;
        animation: float 20s infinite linear;
        opacity: 0.1;
    }

        .shape:nth-child(1) {
            width: 80px;
            height: 80px;
            left: 10%;
            animation-delay: 0s;
        }

        .shape:nth-child(2) {
            width: 120px;
            height: 120px;
            left: 20%;
            animation-delay: 5s;
        }

        .shape:nth-child(3) {
            width: 60px;
            height: 60px;
            left: 70%;
            animation-delay: 10s;
        }

        .shape:nth-child(4) {
            width: 100px;
            height: 100px;
            left: 80%;
            animation-delay: 15s;
        }

        @@keyframes float {
        0% {
            transform: translateY(100vh) rotate(0deg);
        }

        100% {
            transform: translateY(-100px) rotate(360deg);
        }
    }

    /* Particle System */
    .particles {
        position: absolute;
        width: 100%;
        height: 100%;
        pointer-events: none;
    }

    .particle {
        position: absolute;
        background: #3b82f6;
        border-radius: 50%;
        pointer-events: none;
        animation: particle-float 15s infinite linear;
    }

        @@keyframes particle-float {
        0% {
            transform: translateY(100vh) translateX(0);
            opacity: 0;
        }

        10% {
            opacity: 1;
        }

        90% {
            opacity: 1;
        }

        100% {
            transform: translateY(-100px) translateX(100px);
            opacity: 0;
        }
    }

    /* Login Container */
    .login-container {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 20px;
        padding: 40px;
        width: 400px;
        z-index: 10;
        position: relative;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);
        animation: containerSlideIn 1s ease-out;
        overflow: hidden;
    }

        .login-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.3), transparent);
            animation: shimmer 3s infinite;
        }

        @@keyframes shimmer {
        0% {
            left: -100%;
        }

        100% {
            left: 100%;
        }
    }

        @@keyframes containerSlideIn {
        0% {
            transform: translateY(50px);
            opacity: 0;
        }

        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

    /* SVG Logo Animation - Warehouse Theme */
    .logo-container {
        text-align: center;
        margin-bottom: 30px;
        animation: logoFadeIn 1.5s ease-out 0.5s both;
    }

        @@keyframes logoFadeIn {
        0% {
            transform: scale(0.5) rotate(-180deg);
            opacity: 0;
        }

        100% {
            transform: scale(1) rotate(0deg);
            opacity: 1;
        }
    }

    .logo-svg {
        width: 90px;
        height: 90px;
        margin-bottom: 20px;
    }

    .logo-path {
        fill: none;
        stroke: #3b82f6;
        stroke-width: 2.5;
        stroke-dasharray: 300;
        stroke-dashoffset: 300;
        animation: drawPath 2s ease-in-out 1s forwards;
    }

    .logo-fill {
        fill: #1e3a8a;
        opacity: 0;
        animation: fillLogo 1s ease-in-out 2.5s forwards;
    }

        @@keyframes drawPath {
        to {
            stroke-dashoffset: 0;
        }
    }

        @@keyframes fillLogo {
        to {
            opacity: 0.3;
        }
    }

    h2 {
        color: white;
        text-align: center;
        margin-bottom: 8px;
        font-size: 24px;
        font-weight: 600;
        letter-spacing: 1px;
        animation: titleGlow 2s ease-in-out infinite alternate;
    }

    .subtitle {
        color: rgba(96, 165, 250, 0.8);
        text-align: center;
        margin-bottom: 30px;
        font-size: 14px;
        font-weight: 300;
        letter-spacing: 0.5px;
        animation: subtitleFadeIn 1s ease-out 1.5s both;
    }

        @@keyframes subtitleFadeIn {
        0% {
            opacity: 0;
            transform: translateY(10px);
        }

        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

        @@keyframes titleGlow {
        0% {
            text-shadow: 0 0 10px rgba(59, 130, 246, 0.5);
        }

        100% {
            text-shadow: 0 0 20px rgba(59, 130, 246, 0.8), 0 0 30px rgba(59, 130, 246, 0.6);
        }
    }

    /* Form Styling */
    .form-group {
        margin-bottom: 25px;
        position: relative;
        animation: formSlideIn 0.8s ease-out both;
    }

        .form-group:nth-child(2) {
            animation-delay: 0.2s;
        }

        .form-group:nth-child(3) {
            animation-delay: 0.4s;
        }

        @@keyframes formSlideIn {
        0% {
            transform: translateX(-30px);
            opacity: 0;
        }

        100% {
            transform: translateX(0);
            opacity: 1;
        }
    }

    input {
        width: 100%;
        padding: 15px 20px;
        background: linear-gradient(135deg, #1e3a8a, #3b82f6);
        border: 2px solid rgba(96, 165, 250, 0.3);
        border-radius: 12px;
        color: white;
        font-size: 16px;
        transition: all 0.3s ease;
        position: relative;
    }

        input:focus {
            outline: none;
            background: linear-gradient(135deg, #1e40af, #2563eb);
            border-color: #60a5fa;
            box-shadow: 0 0 20px rgba(59, 130, 246, 0.5), 0 0 40px rgba(96, 165, 250, 0.3);
            transform: translateY(-2px);
        }

        input::placeholder {
            color: rgba(255, 255, 255, 0.7);
            transition: all 0.3s ease;
        }

        input:focus::placeholder {
            transform: translateY(-20px);
            opacity: 0;
        }

    /* Floating Labels */
    .form-group {
        position: relative;
    }

    .floating-label {
        position: absolute;
        left: 20px;
        top: 15px;
        color: rgba(255, 255, 255, 0.8);
        font-size: 16px;
        pointer-events: none;
        transition: all 0.3s ease;
        background: linear-gradient(135deg, #1e3a8a, #3b82f6);
        padding: 0 5px;
        border-radius: 4px;
    }

    input:focus ~ .floating-label,
    input:not(:placeholder-shown) ~ .floating-label {
        top: -10px;
        left: 15px;
        font-size: 12px;
        color: #60a5fa;
        background: linear-gradient(135deg, #1e40af, #2563eb);
        box-shadow: 0 2px 10px rgba(59, 130, 246, 0.3);
    }

    /* Button */
    .login-btn {
        width: 100%;
        padding: 15px;
        background: linear-gradient(45deg, #1e3a8a, #3b82f6, #60a5fa);
        background-size: 300% 300%;
        border: none;
        border-radius: 12px;
        color: white;
        font-size: 18px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        animation: buttonSlideIn 0.8s ease-out 0.6s both;
    }

        @@keyframes buttonSlideIn {
        0% {
            transform: translateY(30px);
            opacity: 0;
        }

        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .login-btn:hover {
        background-position: 100% 0;
        transform: translateY(-3px);
        box-shadow: 0 15px 35px rgba(59, 130, 246, 0.4);
        animation: buttonPulse 1.5s infinite;
    }

        @@keyframes buttonPulse {
        0%, 100% {
            box-shadow: 0 15px 35px rgba(59, 130, 246, 0.4);
        }

        50% {
            box-shadow: 0 20px 45px rgba(59, 130, 246, 0.6);
        }
    }

    .login-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
        transition: left 0.5s;
    }

    .login-btn:hover::before {
        left: 100%;
    }

    /* Divider */
    .divider {
        text-align: center;
        margin: 25px 0;
        position: relative;
        animation: dividerFadeIn 1s ease-out 0.8s both;
    }

        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 1px;
            background: linear-gradient(90deg, transparent, rgba(96, 165, 250, 0.5), transparent);
        }

        .divider span {
            background: rgba(0, 0, 0, 0.8);
            color: rgba(255, 255, 255, 0.7);
            padding: 0 20px;
            font-size: 14px;
            font-weight: 300;
            letter-spacing: 1px;
            position: relative;
            z-index: 1;
        }

        @@keyframes dividerFadeIn {
        0% {
            opacity: 0;
            transform: scaleX(0);
        }

        100% {
            opacity: 1;
            transform: scaleX(1);
        }
    }

    /* Google Button */
    .google-btn {
        width: 100%;
        padding: 15px 20px;
        background: rgba(255, 255, 255, 0.95);
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 12px;
        color: #333;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 12px;
        margin-bottom: 20px;
        animation: googleBtnSlideIn 0.8s ease-out 1s both;
        backdrop-filter: blur(10px);
    }

        @@keyframes googleBtnSlideIn {
        0% {
            transform: translateY(30px);
            opacity: 0;
        }

        100% {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .google-btn:hover {
        background: white;
        border-color: rgba(66, 133, 244, 0.3);
        transform: translateY(-2px);
        box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
    }

    .google-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(66, 133, 244, 0.1), transparent);
        transition: left 0.5s;
    }

    .google-btn:hover::before {
        left: 100%;
    }

    .google-icon {
        width: 20px;
        height: 20px;
        transition: transform 0.3s ease;
    }

    .google-btn:hover .google-icon {
        transform: rotate(360deg) scale(1.1);
    }

    .google-btn:active {
        transform: translateY(0);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    }

    /* Footer Links */
    .footer-links {
        text-align: center;
        margin-top: 25px;
        animation: footerFadeIn 1s ease-out 1s both;
    }

        @@keyframes footerFadeIn {
        0% {
            opacity: 0;
        }

        100% {
            opacity: 1;
        }
    }

    .footer-links a {
        color: #60a5fa;
        text-decoration: none;
        margin: 0 10px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

        .footer-links a:hover {
            color: #93c5fd;
            text-shadow: 0 0 10px rgba(147, 197, 253, 0.5);
        }

    /* System Info */
    .system-info {
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        color: rgba(255, 255, 255, 0.4);
        font-size: 12px;
        text-align: center;
        animation: systemInfoFadeIn 1s ease-out 2s both;
    }

        @@keyframes systemInfoFadeIn {
        0% {
            opacity: 0;
            transform: translateX(-50%) translateY(20px);
        }

        100% {
            opacity: 1;
            transform: translateX(-50%) translateY(0);
        }
    }

    .version {
        margin-top: 5px;
        font-size: 10px;
        color: rgba(96, 165, 250, 0.6);
    }

    /* Back to Home Button */
    .back-home {
        position: absolute;
        top: 30px;
        left: 30px;
        color: rgba(255, 255, 255, 0.7);
        text-decoration: none;
        font-size: 14px;
        font-weight: 400;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
        z-index: 20;
        animation: backHomeFadeIn 1s ease-out 0.3s both;
        cursor: pointer;
    }

        .back-home:hover {
            color: #60a5fa;
            text-shadow: 0 0 10px rgba(96, 165, 250, 0.5);
            transform: translateX(-3px);
        }

        .back-home svg {
            width: 16px;
            height: 16px;
            transition: transform 0.3s ease;
        }

        .back-home:hover svg {
            transform: translateX(-2px);
        }

        @@keyframes backHomeFadeIn {
        0% {
            opacity: 0;
            transform: translateX(-20px);
        }

        100% {
            opacity: 1;
            transform: translateX(0);
        }
    }

        @@media (max-width: 480px) {
        .login-container {
            width: 90%;
            padding: 30px 20px;
        }
    }
            /* Custom Checkbox Styling (Keep your existing styles) */
    .remember-checkbox {
        display: flex;
        align-items: center;
        cursor: pointer;
        position: relative;
        padding-left: 30px;
    }

    /* Real Checkbox (Hidden but clickable) */
    .remember-checkbox-input {
        position: absolute;
        opacity: 0;
        width: 20px;
        height: 20px;
        cursor: pointer;
        z-index: 2; /* Ensures it's above the custom checkmark */
        margin: 0;
    }

    /* Custom Checkbox */
    .checkmark {
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        width: 20px;
        height: 20px;
        background: linear-gradient(135deg, #1e3a8a, #3b82f6);
        border: 2px solid rgba(96, 165, 250, 0.3);
        border-radius: 6px;
        pointer-events: none; /* Allow clicks to pass through */
    }

    /* Checked State */
    .remember-checkbox-input:checked ~ .checkmark {
        background: linear-gradient(45deg, #059669, #10b981);
        border-color: #34d399;
    }

    .remember-checkbox-input:checked ~ .checkmark:after {
        content: "";
        position: absolute;
        left: 6px;
        top: 2px;
        width: 6px;
        height: 10px;
        border: solid white;
        border-width: 0 2.5px 2.5px 0;
        transform: rotate(45deg);
    }
    /* Remember text styling */
        .remember-text {
          transition: all 0.3s ease;
          letter-spacing: 0.3px;
        }

        .remember-checkbox input:checked ~ .remember-text {
          color: #34d399;
          text-shadow: 0 0 10px rgba(52, 212, 153, 0.4);
        }
                .text-danger{
                    color:red !important;
                    text-align:center
                }

        .text-danger > ul{
            font-size:medium;
            list-style-type:none;
            margin:10px 0;

        }
        
}
<style>

</style>
<div class="login-container">
    <div class="logo-container">
        <svg class="logo-svg" viewBox="0 0 120 120">
            <!-- Warehouse Building -->
            <rect class="logo-fill" x="20" y="50" width="80" height="50" />
            <polygon class="logo-fill" points="20,50 60,20 100,50" />

            <!-- Warehouse Outline -->
            <rect class="logo-path" x="20" y="50" width="80" height="50" />
            <polygon class="logo-path" points="20,50 60,20 100,50" />

            <!-- Warehouse Doors -->
            <rect class="logo-path" x="35" y="70" width="15" height="30" />
            <rect class="logo-path" x="70" y="70" width="15" height="30" />

            <!-- Loading Dock -->
            <rect class="logo-path" x="25" y="95" width="70" height="8" />

            <!-- Boxes/Inventory -->
            <rect class="logo-fill" x="40" y="85" width="8" height="8" />
            <rect class="logo-fill" x="72" y="85" width="8" height="8" />
        </svg>
        <h2>WAREHOUSE MANAGEMENT</h2>
        <p class="subtitle">Inventory • Storage • Logistics</p>
    </div>

    <form id="loginForm" method="post" asp-action="Login" asp-controller="Account">
        <div class="form-group">
            <input asp-for="@Model.UserName" placeholder=" " required>
            <label asp-for="@Model.UserName" class="floating-label"> Username</label>
        </div>

        <div class="form-group">
            <input asp-for="@Model.Password" placeholder=" " required>
            <label asp-for="@Model.Password" class="floating-label">Password</label>
        </div>
        <div class="form-group remember-group">
            <label class="remember-checkbox">
                <input asp-for="@Model.RememberMe"
                       id="rememberMe"
                       class="remember-checkbox-input" />
                <span class="checkmark"></span>
                <span class="remember-text" style="color:floralwhite">Remember me for 30 days</span>
            </label>
        </div>  
        <div asp-validation-summary="All" class="text-danger"></div>
        <button type="submit" class="login-btn">
            ACCESS WAREHOUSE SYSTEM
        </button>
    </form>

    <div class="divider">
        <span>OR</span>
    </div>

    <form asp-action="ExternalLogin" asp-controller="Account" asp-route-returnUrl="@Model?.ReturnUrl" method="post">
        <input type="hidden" name="provider" value="Google" />
        <button type="submit" class="google-btn" onclick="googleLogin()">
            <svg class="google-icon" viewBox="0 0 24 24">
                <path fill="#4285f4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z" />
                <path fill="#34a853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z" />
                <path fill="#fbbc05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z" />
                <path fill="#ea4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z" />
            </svg>
            Continue with Google
        </button>
    </form>

  

    <div class="footer-links">
        <a href="#">Forgot Password?</a>
        <a asp-action="Register" asp-controller="Account" >SignUp</a>
    </div>
</div>


@section Scripts{
    <script>
                function createParticles() {
                const particles = document.getElementById('particles');

                setInterval(() => {
                    const particle = document.createElement('div');
        particle.className = 'particle';
        particle.style.left = Math.random() * 100 + 'vw';
        particle.style.width = particle.style.height = Math.random() * 4 + 2 + 'px';
        particle.style.animationDelay = Math.random() * 2 + 's';
        particle.style.animationDuration = (Math.random() * 10 + 10) + 's';

        particles.appendChild(particle);

                    setTimeout(() => {
            particle.remove();
                    }, 15000);
                }, 300);
            }

    
            // Input focus effects
            document.querySelectorAll('input').forEach(input => {
            input.addEventListener('focus', function () {
                this.parentElement.style.transform = 'scale(1.02)';
            });

        input.addEventListener('blur', function() {
            this.parentElement.style.transform = 'scale(1)';
                });
            });

            // Mouse movement parallax effect
            document.addEventListener('mousemove', (e) => {
                const mouseX = e.clientX / window.innerWidth;
        const mouseY = e.clientY / window.innerHeight;

                document.querySelectorAll('.shape').forEach((shape, index) => {
                    const speed = (index + 1) * 0.5;
        const x = (mouseX - 0.5) * speed * 50;
        const y = (mouseY - 0.5) * speed * 50;

        shape.style.transform += ` translate(${x}px, ${y}px)`;
                });
            });

        // Initialize particles
        createParticles();

        // Back to home function
        function goHome() {
                const backBtn = document.querySelector('.back-home');
        backBtn.style.color = '#34d399';
        backBtn.style.transform = 'translateX(-5px)';

                setTimeout(() => {
            // Simulate navigation - you can replace with actual navigation
            console.log('Navigating to home...');
        // window.location.href = '/home'; // Uncomment for actual navigation

        // Reset button state
        backBtn.style.color = 'rgba(255, 255, 255, 0.7)';
        backBtn.style.transform = 'translateX(0)';
                }, 300);
            }

        // Google login function
        function googleLogin() {
                const btn = document.querySelector('.google-btn');
        const originalText = btn.innerHTML;

        btn.innerHTML = `
        <div style="width: 20px; height: 20px; border: 2px solid #4285f4; border-top: 2px solid transparent; border-radius: 50%; animation: spin 1s linear infinite;"></div>
        Connecting...
        `;
        btn.style.background = 'rgba(66, 133, 244, 0.1)';

                setTimeout(() => {
            btn.innerHTML = `
                        <svg style="width: 20px; height: 20px; fill: #34a853;" viewBox="0 0 24 24">
                            <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/>
                        </svg>
                        Connected Successfully!
                    `;
        btn.style.background = 'rgba(52, 168, 83, 0.1)';
        btn.style.borderColor = 'rgba(52, 168, 83, 0.3)';

                    setTimeout(() => {
            btn.innerHTML = originalText;
        btn.style.background = 'rgba(255, 255, 255, 0.95)';
        btn.style.borderColor = 'rgba(255, 255, 255, 0.3)';
                    }, 2000);
                }, 2000);
            }

        // Add keyframe for loading spinner
        const style = document.createElement('style');
        style.textContent = `
        @@keyframes spin {
            0 % { transform: rotate(0deg); }
                    100% {transform: rotate(360deg); }
                }
        `;
        document.head.appendChild(style);

            // Add typing animation to inputs
            document.querySelectorAll('input').forEach(input => {
            input.addEventListener('input', function () {
                if (this.value.length > 0) {
                    this.style.boxShadow = '0 0 25px rgba(59, 130, 246, 0.4), 0 0 50px rgba(96, 165, 250, 0.2)';
                    this.style.background = 'linear-gradient(135deg, #1e40af, #2563eb)';
                } else {
                    this.style.boxShadow = '0 0 20px rgba(59, 130, 246, 0.5), 0 0 40px rgba(96, 165, 250, 0.3)';
                    this.style.background = 'linear-gradient(135deg, #1e3a8a, #3b82f6)';
                }
            });
            });

                        document.querySelectorAll('.remember-checkbox-label').forEach(label => {
            label.addEventListener('click', function(e) {
                const checkbox = this.previousElementSibling;
                checkbox.checked = !checkbox.checked;

                
                if(checkbox.checked) {
                    console.log("okkkkk")
                } else {
                    console.log("nnnnnnnnnno")
                }
            });
        });
    </script>
}

